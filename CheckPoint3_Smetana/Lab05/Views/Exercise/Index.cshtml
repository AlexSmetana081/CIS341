@model IEnumerable<Lab05.Models.Exercise>
@inject IAuthorizationService AuthorizationService

@{
    ViewData["Title"] = "Index";
}

<!DOCTYPE HTML>
<html lang="en">

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"]</title>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css" integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">
</head>

<body>

    <h1>Exercises</h1>

    <!-- Create Exercise (Trainer and Admin ONLY)-->
    @if ((await AuthorizationService.AuthorizeAsync(User, "RequireAdministratorRole")).Succeeded ||
    User.IsInRole("Trainer") ||
    User.IsInRole("Admin"))
    {
        <p>

            <a asp-action="Create">Create New</a>
        </p>
    }

    <!--
        Table for Exercises
        Bootstrap Card Format
    -->
    <table class="table">
        <tbody>
            <div class="row">

               <!-- Loop through Exercise Model--> 
                @foreach (var item in Model)
                {
                    <div class="col-md-4 mb-4">
                        <div class="card">
                            <div class="card-body">

                                <!--
                                    Hamburger icon and dropdown links for each card with format top right corner
                                    Dropdown: Edit, Details, Delete
                                -->
                                <div class="dropdown" style="position: absolute; top: 0; right: 0; margin: 15px;">
                                    <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton-@item.ExerciseId" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                        ☰
                                    </button>

                                    <div class="dropdown-menu" aria-labelledby="dropdownMenuButton-@item.ExerciseId">
                                        <!-- Details View to all Roles-->
                                        <a class="dropdown-item" asp-action="Details" asp-route-id="@item.ExerciseId">Details</a>

                                        <!-- Edit and Delete (Admin and Trainer ONLY!)-->
                                        @if ((await AuthorizationService.AuthorizeAsync(User, "RequireAdministratorRole")).Succeeded ||
                                             User.IsInRole("Trainer") ||
                                               User.IsInRole("Admin"))
                                        {
                                            <!-- Edit -->
                                            <a class="dropdown-item" asp-action="Edit" asp-route-id="@item.ExerciseId">Edit</a>
                                            
                                            <!-- Delete -->
                                            <a class="dropdown-item" asp-action="Delete" asp-route-id="@item.ExerciseId" onclick="return confirm('Are you sure you want to delete this item?');">Delete</a>
                                        }
                                    </div>
                                </div>

                                <!-- 
                                    Card content Below:
                                        Name
                                        Description
                                        Workout Intensity
                                        AuthorName
                                -->

                                <!-- Name -->
                                <h5 class="card-title">@Html.DisplayFor(modelItem => item.Name)</h5>

                                <!-- Description -->
                                <p class="card-text">@Html.DisplayFor(modelItem => item.Description)</p>

                                <!-- Workout Intensity-->
                                <p class="card-text">Intensity: @Html.DisplayFor(modelItem => item.WorkoutIntensity)</p>

                                <!-- Author Name -->
                                <p class="card-text">Author: @Html.DisplayFor(modelItem => item.AuthorName.Name)</p>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </tbody>
    </table>

    <!-- Bootstrap and jQuery scripts -->
    <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js" integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.12.9/dist/umd/popper.min.js" integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q" crossorigin="anonymous"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js" integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl" crossorigin="anonymous"></script>
</body>
</html>
